# Default values for kube-oidc-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/jetstack/kube-oidc-proxy
  tag: v0.3.0
  pullPolicy: IfNotPresent

auditProxyImage:
  name: bnn-audit-proxy
  repository: gcr.io/banyan-pub/k8s-audit-proxy
  tag: v0.0.5
  pullPolicy: IfNotPresent

auditProxy:
  # required
  serviceName:
  # required
  refreshToken:
  restapiUrl: "https://net.banyanops.com"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: LoadBalancer
  port: 443
  annotations:
    # You can use this field to add annotations to the Service.
    # Define it in a key-value pairs. E.g.
    # service.beta.kubernetes.io/aws-load-balancer-internal: "true" ## AWS
    # service.beta.kubernetes.io/azure-load-balancer-internal: "true" ## Azure
    # cloud.google.com/load-balancer-type: "Internal" ## GCP

  loadBalancerIP: ""
  loadBalancerSourceRanges: []

tls:
  # `secretName` must be a name of Secret of TLS type. If not provided a
  # self-signed certificate will get generated.
  secretName: selfsigned-kube-oidc-proxy-cert-tls

# These values needs to be set in overrides in order to get kube-oidc-proxy
# working.
oidc:
  # A minimal configuration requires setting clientId, issuerUrl and usernameClaim
  # values.
  clientId: ""
  issuerUrl: ""
  usernameClaim: email

  # PEM encoded value of CA cert that will verify TLS connection to
  # OIDC issuer URL. If not provided, default hosts root CA's will be used.
  caPEM:

  usernamePrefix: "banyan:"
  groupsClaim: roles
  groupsPrefix: "banyan:"

  signingAlgs:
    - RS256
  requiredClaims: {}

# To enable token passthrough feature
# https://github.com/jetstack/kube-oidc-proxy/blob/master/docs/tasks/token-passthrough.md
tokenPassthrough:
  enabled: false
  audiences: []

# To add extra impersonation headers
# https://github.com/jetstack/kube-oidc-proxy/blob/master/docs/tasks/extra-impersonation-headers.md
extraImpersonationHeaders:
  clientIP: false
  #headers: key1=foo,key2=bar,key1=bar

extraArgs:
  audit-webhook-config-file: /audit/webhook.yaml
  audit-policy-file: /audit/audit.yaml
  audit-webhook-batch-max-wait: 300s #5 mins
  audit-webhook-initial-backoff: 30s
  audit-webhook-batch-max-size: 400
  audit-webhook-batch-throttle-burst: 4
  audit-webhook-batch-throttle-qps: .067 # every 15seconds
  audit-webhook-batch-buffer-size: 10000
  audit-webhook-truncate-enabled: true

extraVolumeMounts:
  - name: audit
    mountPath: /audit
    readOnly: true

extraVolumes:
  - configMap:
      defaultMode: 420
      name: kube-oidc-proxy-audit-policy
    name: audit

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Enable Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  #

initContainers: []

nodeSelector: {}

tolerations: []

affinity: {}
